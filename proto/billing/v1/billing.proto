syntax = "proto3";

package billing.v1;

option go_package = "paperdebugger/pkg/gen/api/billing/v1;billingv1";

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";

enum BillingPlan {
  BILLING_PLAN_UNSPECIFIED = 0;
  BILLING_PLAN_FREE = 1;
  BILLING_PLAN_PRO = 2;
}

enum SubscriptionStatus {
  SUBSCRIPTION_STATUS_UNSPECIFIED = 0;
  SUBSCRIPTION_STATUS_NONE = 1;
  SUBSCRIPTION_STATUS_TRIALING = 2;
  SUBSCRIPTION_STATUS_ACTIVE = 3;
  SUBSCRIPTION_STATUS_PAST_DUE = 4;
  SUBSCRIPTION_STATUS_CANCELED = 5;
}

message BillingStatus {
  BillingPlan plan = 1;
  SubscriptionStatus status = 2;
  google.protobuf.Timestamp current_period_end = 3;
  bool cancel_at_period_end = 4;
}

message GetBillingStatusRequest {}
message GetBillingStatusResponse { BillingStatus status = 1; }

message CreateCheckoutSessionRequest {
  BillingPlan plan = 1;
  string success_url = 2;
  string cancel_url = 3;
}
message CreateCheckoutSessionResponse { string redirect_url = 1; }

message CreatePortalSessionRequest {}
message CreatePortalSessionResponse { string portal_url = 1; }

message HandleWebhookRequest { bytes body = 1; map<string, string> headers = 2; }
message HandleWebhookResponse { bool ok = 1; }

service BillingService {
  rpc GetBillingStatus(GetBillingStatusRequest) returns (GetBillingStatusResponse) {
    option (google.api.http) = { get: "/billing/v1/status" };
  }
  rpc CreateCheckoutSession(CreateCheckoutSessionRequest) returns (CreateCheckoutSessionResponse) {
    option (google.api.http) = { post: "/billing/v1/checkout" body: "*" };
  }
  rpc CreatePortalSession(CreatePortalSessionRequest) returns (CreatePortalSessionResponse) {
    option (google.api.http) = { post: "/billing/v1/portal" body: "*" };
  }
  // Webhook should be unauthenticated; gateway path is public
  rpc HandleWebhook(HandleWebhookRequest) returns (HandleWebhookResponse) {
    option (google.api.http) = { post: "/billing/v1/webhook" body: "*" };
  }
}

