// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: chat/v1/chat.proto

package chatv1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "paperdebugger/pkg/gen/api/shared/v1"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LanguageModel int32

const (
	LanguageModel_LANGUAGE_MODEL_UNSPECIFIED       LanguageModel = 0
	LanguageModel_LANGUAGE_MODEL_OPENAI_GPT4O      LanguageModel = 1
	LanguageModel_LANGUAGE_MODEL_OPENAI_GPT41_MINI LanguageModel = 2
	LanguageModel_LANGUAGE_MODEL_OPENAI_GPT41      LanguageModel = 4
	LanguageModel_LANGUAGE_MODEL_OPENAI_GPT5       LanguageModel = 7
	LanguageModel_LANGUAGE_MODEL_OPENAI_GPT5_MINI  LanguageModel = 8
	LanguageModel_LANGUAGE_MODEL_OPENAI_GPT5_NANO  LanguageModel = 9
)

// Enum value maps for LanguageModel.
var (
	LanguageModel_name = map[int32]string{
		0: "LANGUAGE_MODEL_UNSPECIFIED",
		1: "LANGUAGE_MODEL_OPENAI_GPT4O",
		2: "LANGUAGE_MODEL_OPENAI_GPT41_MINI",
		4: "LANGUAGE_MODEL_OPENAI_GPT41",
		7: "LANGUAGE_MODEL_OPENAI_GPT5",
		8: "LANGUAGE_MODEL_OPENAI_GPT5_MINI",
		9: "LANGUAGE_MODEL_OPENAI_GPT5_NANO",
	}
	LanguageModel_value = map[string]int32{
		"LANGUAGE_MODEL_UNSPECIFIED":       0,
		"LANGUAGE_MODEL_OPENAI_GPT4O":      1,
		"LANGUAGE_MODEL_OPENAI_GPT41_MINI": 2,
		"LANGUAGE_MODEL_OPENAI_GPT41":      4,
		"LANGUAGE_MODEL_OPENAI_GPT5":       7,
		"LANGUAGE_MODEL_OPENAI_GPT5_MINI":  8,
		"LANGUAGE_MODEL_OPENAI_GPT5_NANO":  9,
	}
)

func (x LanguageModel) Enum() *LanguageModel {
	p := new(LanguageModel)
	*p = x
	return p
}

func (x LanguageModel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LanguageModel) Descriptor() protoreflect.EnumDescriptor {
	return file_chat_v1_chat_proto_enumTypes[0].Descriptor()
}

func (LanguageModel) Type() protoreflect.EnumType {
	return &file_chat_v1_chat_proto_enumTypes[0]
}

func (x LanguageModel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LanguageModel.Descriptor instead.
func (LanguageModel) EnumDescriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{0}
}

type ConversationType int32

const (
	ConversationType_CONVERSATION_TYPE_DEFAULT ConversationType = 0
	ConversationType_CONVERSATION_TYPE_DEBUG   ConversationType = 1 // does not contain any customized messages, the inapp_history and openai_history are synced.
)

// Enum value maps for ConversationType.
var (
	ConversationType_name = map[int32]string{
		0: "CONVERSATION_TYPE_DEFAULT",
		1: "CONVERSATION_TYPE_DEBUG",
	}
	ConversationType_value = map[string]int32{
		"CONVERSATION_TYPE_DEFAULT": 0,
		"CONVERSATION_TYPE_DEBUG":   1,
	}
)

func (x ConversationType) Enum() *ConversationType {
	p := new(ConversationType)
	*p = x
	return p
}

func (x ConversationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConversationType) Descriptor() protoreflect.EnumDescriptor {
	return file_chat_v1_chat_proto_enumTypes[1].Descriptor()
}

func (ConversationType) Type() protoreflect.EnumType {
	return &file_chat_v1_chat_proto_enumTypes[1]
}

func (x ConversationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConversationType.Descriptor instead.
func (ConversationType) EnumDescriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{1}
}

type MessageTypeToolCall struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Args          string                 `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty"`     // Json string
	Result        string                 `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"` // Json string
	Error         string                 `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`   // Json string
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MessageTypeToolCall) Reset() {
	*x = MessageTypeToolCall{}
	mi := &file_chat_v1_chat_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageTypeToolCall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageTypeToolCall) ProtoMessage() {}

func (x *MessageTypeToolCall) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageTypeToolCall.ProtoReflect.Descriptor instead.
func (*MessageTypeToolCall) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{0}
}

func (x *MessageTypeToolCall) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MessageTypeToolCall) GetArgs() string {
	if x != nil {
		return x.Args
	}
	return ""
}

func (x *MessageTypeToolCall) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

func (x *MessageTypeToolCall) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type MessageTypeToolCallPrepareArguments struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Args          string                 `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty"` // Json string
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MessageTypeToolCallPrepareArguments) Reset() {
	*x = MessageTypeToolCallPrepareArguments{}
	mi := &file_chat_v1_chat_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageTypeToolCallPrepareArguments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageTypeToolCallPrepareArguments) ProtoMessage() {}

func (x *MessageTypeToolCallPrepareArguments) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageTypeToolCallPrepareArguments.ProtoReflect.Descriptor instead.
func (*MessageTypeToolCallPrepareArguments) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{1}
}

func (x *MessageTypeToolCallPrepareArguments) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MessageTypeToolCallPrepareArguments) GetArgs() string {
	if x != nil {
		return x.Args
	}
	return ""
}

type MessageTypeSystem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Content       string                 `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MessageTypeSystem) Reset() {
	*x = MessageTypeSystem{}
	mi := &file_chat_v1_chat_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageTypeSystem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageTypeSystem) ProtoMessage() {}

func (x *MessageTypeSystem) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageTypeSystem.ProtoReflect.Descriptor instead.
func (*MessageTypeSystem) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{2}
}

func (x *MessageTypeSystem) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type MessageTypeAssistant struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Content       string                 `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MessageTypeAssistant) Reset() {
	*x = MessageTypeAssistant{}
	mi := &file_chat_v1_chat_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageTypeAssistant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageTypeAssistant) ProtoMessage() {}

func (x *MessageTypeAssistant) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageTypeAssistant.ProtoReflect.Descriptor instead.
func (*MessageTypeAssistant) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{3}
}

func (x *MessageTypeAssistant) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type MessageTypeUser struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Content       string                 `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	SelectedText  *string                `protobuf:"bytes,2,opt,name=selected_text,json=selectedText,proto3,oneof" json:"selected_text,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MessageTypeUser) Reset() {
	*x = MessageTypeUser{}
	mi := &file_chat_v1_chat_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageTypeUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageTypeUser) ProtoMessage() {}

func (x *MessageTypeUser) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageTypeUser.ProtoReflect.Descriptor instead.
func (*MessageTypeUser) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{4}
}

func (x *MessageTypeUser) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *MessageTypeUser) GetSelectedText() string {
	if x != nil && x.SelectedText != nil {
		return *x.SelectedText
	}
	return ""
}

type MessageTypeUnknown struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Description   string                 `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MessageTypeUnknown) Reset() {
	*x = MessageTypeUnknown{}
	mi := &file_chat_v1_chat_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageTypeUnknown) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageTypeUnknown) ProtoMessage() {}

func (x *MessageTypeUnknown) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageTypeUnknown.ProtoReflect.Descriptor instead.
func (*MessageTypeUnknown) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{5}
}

func (x *MessageTypeUnknown) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type MessagePayload struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to MessageType:
	//
	//	*MessagePayload_System
	//	*MessagePayload_User
	//	*MessagePayload_Assistant
	//	*MessagePayload_ToolCallPrepareArguments
	//	*MessagePayload_ToolCall
	//	*MessagePayload_Unknown
	MessageType   isMessagePayload_MessageType `protobuf_oneof:"message_type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MessagePayload) Reset() {
	*x = MessagePayload{}
	mi := &file_chat_v1_chat_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessagePayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessagePayload) ProtoMessage() {}

func (x *MessagePayload) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessagePayload.ProtoReflect.Descriptor instead.
func (*MessagePayload) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{6}
}

func (x *MessagePayload) GetMessageType() isMessagePayload_MessageType {
	if x != nil {
		return x.MessageType
	}
	return nil
}

func (x *MessagePayload) GetSystem() *MessageTypeSystem {
	if x != nil {
		if x, ok := x.MessageType.(*MessagePayload_System); ok {
			return x.System
		}
	}
	return nil
}

func (x *MessagePayload) GetUser() *MessageTypeUser {
	if x != nil {
		if x, ok := x.MessageType.(*MessagePayload_User); ok {
			return x.User
		}
	}
	return nil
}

func (x *MessagePayload) GetAssistant() *MessageTypeAssistant {
	if x != nil {
		if x, ok := x.MessageType.(*MessagePayload_Assistant); ok {
			return x.Assistant
		}
	}
	return nil
}

func (x *MessagePayload) GetToolCallPrepareArguments() *MessageTypeToolCallPrepareArguments {
	if x != nil {
		if x, ok := x.MessageType.(*MessagePayload_ToolCallPrepareArguments); ok {
			return x.ToolCallPrepareArguments
		}
	}
	return nil
}

func (x *MessagePayload) GetToolCall() *MessageTypeToolCall {
	if x != nil {
		if x, ok := x.MessageType.(*MessagePayload_ToolCall); ok {
			return x.ToolCall
		}
	}
	return nil
}

func (x *MessagePayload) GetUnknown() *MessageTypeUnknown {
	if x != nil {
		if x, ok := x.MessageType.(*MessagePayload_Unknown); ok {
			return x.Unknown
		}
	}
	return nil
}

type isMessagePayload_MessageType interface {
	isMessagePayload_MessageType()
}

type MessagePayload_System struct {
	System *MessageTypeSystem `protobuf:"bytes,1,opt,name=system,proto3,oneof"`
}

type MessagePayload_User struct {
	User *MessageTypeUser `protobuf:"bytes,2,opt,name=user,proto3,oneof"`
}

type MessagePayload_Assistant struct {
	Assistant *MessageTypeAssistant `protobuf:"bytes,3,opt,name=assistant,proto3,oneof"`
}

type MessagePayload_ToolCallPrepareArguments struct {
	ToolCallPrepareArguments *MessageTypeToolCallPrepareArguments `protobuf:"bytes,4,opt,name=tool_call_prepare_arguments,json=toolCallPrepareArguments,proto3,oneof"`
}

type MessagePayload_ToolCall struct {
	ToolCall *MessageTypeToolCall `protobuf:"bytes,5,opt,name=tool_call,json=toolCall,proto3,oneof"`
}

type MessagePayload_Unknown struct {
	Unknown *MessageTypeUnknown `protobuf:"bytes,6,opt,name=unknown,proto3,oneof"`
}

func (*MessagePayload_System) isMessagePayload_MessageType() {}

func (*MessagePayload_User) isMessagePayload_MessageType() {}

func (*MessagePayload_Assistant) isMessagePayload_MessageType() {}

func (*MessagePayload_ToolCallPrepareArguments) isMessagePayload_MessageType() {}

func (*MessagePayload_ToolCall) isMessagePayload_MessageType() {}

func (*MessagePayload_Unknown) isMessagePayload_MessageType() {}

type Message struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MessageId     string                 `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	Payload       *MessagePayload        `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Message) Reset() {
	*x = Message{}
	mi := &file_chat_v1_chat_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{7}
}

func (x *Message) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *Message) GetPayload() *MessagePayload {
	if x != nil {
		return x.Payload
	}
	return nil
}

type Conversation struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string                 `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	LanguageModel LanguageModel          `protobuf:"varint,2,opt,name=language_model,json=languageModel,proto3,enum=chat.v1.LanguageModel" json:"language_model,omitempty"`
	// If list conversations, then messages length is 0.
	Messages      []*Message `protobuf:"bytes,4,rep,name=messages,proto3" json:"messages,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Conversation) Reset() {
	*x = Conversation{}
	mi := &file_chat_v1_chat_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Conversation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Conversation) ProtoMessage() {}

func (x *Conversation) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Conversation.ProtoReflect.Descriptor instead.
func (*Conversation) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{8}
}

func (x *Conversation) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Conversation) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Conversation) GetLanguageModel() LanguageModel {
	if x != nil {
		return x.LanguageModel
	}
	return LanguageModel_LANGUAGE_MODEL_UNSPECIFIED
}

func (x *Conversation) GetMessages() []*Message {
	if x != nil {
		return x.Messages
	}
	return nil
}

type ListConversationsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectId     *string                `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3,oneof" json:"project_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListConversationsRequest) Reset() {
	*x = ListConversationsRequest{}
	mi := &file_chat_v1_chat_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListConversationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListConversationsRequest) ProtoMessage() {}

func (x *ListConversationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListConversationsRequest.ProtoReflect.Descriptor instead.
func (*ListConversationsRequest) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{9}
}

func (x *ListConversationsRequest) GetProjectId() string {
	if x != nil && x.ProjectId != nil {
		return *x.ProjectId
	}
	return ""
}

type ListConversationsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// In this response, the length of conversations[i].messages should be 0.
	Conversations []*Conversation `protobuf:"bytes,1,rep,name=conversations,proto3" json:"conversations,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListConversationsResponse) Reset() {
	*x = ListConversationsResponse{}
	mi := &file_chat_v1_chat_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListConversationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListConversationsResponse) ProtoMessage() {}

func (x *ListConversationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListConversationsResponse.ProtoReflect.Descriptor instead.
func (*ListConversationsResponse) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{10}
}

func (x *ListConversationsResponse) GetConversations() []*Conversation {
	if x != nil {
		return x.Conversations
	}
	return nil
}

type GetConversationRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ConversationId string                 `protobuf:"bytes,1,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetConversationRequest) Reset() {
	*x = GetConversationRequest{}
	mi := &file_chat_v1_chat_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConversationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConversationRequest) ProtoMessage() {}

func (x *GetConversationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConversationRequest.ProtoReflect.Descriptor instead.
func (*GetConversationRequest) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{11}
}

func (x *GetConversationRequest) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

type GetConversationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Conversation  *Conversation          `protobuf:"bytes,1,opt,name=conversation,proto3" json:"conversation,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetConversationResponse) Reset() {
	*x = GetConversationResponse{}
	mi := &file_chat_v1_chat_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConversationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConversationResponse) ProtoMessage() {}

func (x *GetConversationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConversationResponse.ProtoReflect.Descriptor instead.
func (*GetConversationResponse) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{12}
}

func (x *GetConversationResponse) GetConversation() *Conversation {
	if x != nil {
		return x.Conversation
	}
	return nil
}

type CreateConversationMessageRequest struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	ProjectId string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	// If conversation_id is not provided,
	// a new conversation will be created and the id will be returned.
	ConversationId   *string           `protobuf:"bytes,2,opt,name=conversation_id,json=conversationId,proto3,oneof" json:"conversation_id,omitempty"`
	LanguageModel    LanguageModel     `protobuf:"varint,3,opt,name=language_model,json=languageModel,proto3,enum=chat.v1.LanguageModel" json:"language_model,omitempty"`
	UserMessage      string            `protobuf:"bytes,4,opt,name=user_message,json=userMessage,proto3" json:"user_message,omitempty"`
	UserSelectedText *string           `protobuf:"bytes,5,opt,name=user_selected_text,json=userSelectedText,proto3,oneof" json:"user_selected_text,omitempty"`
	ConversationType *ConversationType `protobuf:"varint,6,opt,name=conversation_type,json=conversationType,proto3,enum=chat.v1.ConversationType,oneof" json:"conversation_type,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CreateConversationMessageRequest) Reset() {
	*x = CreateConversationMessageRequest{}
	mi := &file_chat_v1_chat_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateConversationMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateConversationMessageRequest) ProtoMessage() {}

func (x *CreateConversationMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateConversationMessageRequest.ProtoReflect.Descriptor instead.
func (*CreateConversationMessageRequest) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{13}
}

func (x *CreateConversationMessageRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *CreateConversationMessageRequest) GetConversationId() string {
	if x != nil && x.ConversationId != nil {
		return *x.ConversationId
	}
	return ""
}

func (x *CreateConversationMessageRequest) GetLanguageModel() LanguageModel {
	if x != nil {
		return x.LanguageModel
	}
	return LanguageModel_LANGUAGE_MODEL_UNSPECIFIED
}

func (x *CreateConversationMessageRequest) GetUserMessage() string {
	if x != nil {
		return x.UserMessage
	}
	return ""
}

func (x *CreateConversationMessageRequest) GetUserSelectedText() string {
	if x != nil && x.UserSelectedText != nil {
		return *x.UserSelectedText
	}
	return ""
}

func (x *CreateConversationMessageRequest) GetConversationType() ConversationType {
	if x != nil && x.ConversationType != nil {
		return *x.ConversationType
	}
	return ConversationType_CONVERSATION_TYPE_DEFAULT
}

type CreateConversationMessageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Conversation  *Conversation          `protobuf:"bytes,1,opt,name=conversation,proto3" json:"conversation,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateConversationMessageResponse) Reset() {
	*x = CreateConversationMessageResponse{}
	mi := &file_chat_v1_chat_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateConversationMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateConversationMessageResponse) ProtoMessage() {}

func (x *CreateConversationMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateConversationMessageResponse.ProtoReflect.Descriptor instead.
func (*CreateConversationMessageResponse) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{14}
}

func (x *CreateConversationMessageResponse) GetConversation() *Conversation {
	if x != nil {
		return x.Conversation
	}
	return nil
}

type UpdateConversationRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ConversationId string                 `protobuf:"bytes,1,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
	Title          string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *UpdateConversationRequest) Reset() {
	*x = UpdateConversationRequest{}
	mi := &file_chat_v1_chat_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateConversationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateConversationRequest) ProtoMessage() {}

func (x *UpdateConversationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateConversationRequest.ProtoReflect.Descriptor instead.
func (*UpdateConversationRequest) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{15}
}

func (x *UpdateConversationRequest) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

func (x *UpdateConversationRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type UpdateConversationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Conversation  *Conversation          `protobuf:"bytes,1,opt,name=conversation,proto3" json:"conversation,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateConversationResponse) Reset() {
	*x = UpdateConversationResponse{}
	mi := &file_chat_v1_chat_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateConversationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateConversationResponse) ProtoMessage() {}

func (x *UpdateConversationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateConversationResponse.ProtoReflect.Descriptor instead.
func (*UpdateConversationResponse) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{16}
}

func (x *UpdateConversationResponse) GetConversation() *Conversation {
	if x != nil {
		return x.Conversation
	}
	return nil
}

type DeleteConversationRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ConversationId string                 `protobuf:"bytes,1,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *DeleteConversationRequest) Reset() {
	*x = DeleteConversationRequest{}
	mi := &file_chat_v1_chat_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteConversationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteConversationRequest) ProtoMessage() {}

func (x *DeleteConversationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteConversationRequest.ProtoReflect.Descriptor instead.
func (*DeleteConversationRequest) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{17}
}

func (x *DeleteConversationRequest) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

type DeleteConversationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteConversationResponse) Reset() {
	*x = DeleteConversationResponse{}
	mi := &file_chat_v1_chat_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteConversationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteConversationResponse) ProtoMessage() {}

func (x *DeleteConversationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteConversationResponse.ProtoReflect.Descriptor instead.
func (*DeleteConversationResponse) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{18}
}

// Information sent once at the beginning of a new conversation stream
type StreamInitialization struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ConversationId string                 `protobuf:"bytes,1,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
	LanguageModel  LanguageModel          `protobuf:"varint,5,opt,name=language_model,json=languageModel,proto3,enum=chat.v1.LanguageModel" json:"language_model,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *StreamInitialization) Reset() {
	*x = StreamInitialization{}
	mi := &file_chat_v1_chat_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamInitialization) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamInitialization) ProtoMessage() {}

func (x *StreamInitialization) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamInitialization.ProtoReflect.Descriptor instead.
func (*StreamInitialization) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{19}
}

func (x *StreamInitialization) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

func (x *StreamInitialization) GetLanguageModel() LanguageModel {
	if x != nil {
		return x.LanguageModel
	}
	return LanguageModel_LANGUAGE_MODEL_UNSPECIFIED
}

// Designed as StreamPartBegin and StreamPartEnd to
// handle the case where assistant and tool are called at the same time.
//
// User: Please answer me "Ok I will do that", then call "get_weather"
// Assistant: Ok I will do that + Tool: get_weather
type StreamPartBegin struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MessageId     string                 `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	Payload       *MessagePayload        `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamPartBegin) Reset() {
	*x = StreamPartBegin{}
	mi := &file_chat_v1_chat_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamPartBegin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamPartBegin) ProtoMessage() {}

func (x *StreamPartBegin) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamPartBegin.ProtoReflect.Descriptor instead.
func (*StreamPartBegin) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{20}
}

func (x *StreamPartBegin) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *StreamPartBegin) GetPayload() *MessagePayload {
	if x != nil {
		return x.Payload
	}
	return nil
}

// Note: After the StreamPartBegin of tool_call, there can be no MessageChunk,
//
//	and the StreamPartEnd can be directly called when the result is ready.
type MessageChunk struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MessageId     string                 `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"` // The id of the message that this chunk belongs to
	Delta         string                 `protobuf:"bytes,2,opt,name=delta,proto3" json:"delta,omitempty"`                          // The small piece of text
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MessageChunk) Reset() {
	*x = MessageChunk{}
	mi := &file_chat_v1_chat_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageChunk) ProtoMessage() {}

func (x *MessageChunk) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageChunk.ProtoReflect.Descriptor instead.
func (*MessageChunk) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{21}
}

func (x *MessageChunk) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *MessageChunk) GetDelta() string {
	if x != nil {
		return x.Delta
	}
	return ""
}

type IncompleteIndicator struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Reason        string                 `protobuf:"bytes,1,opt,name=reason,proto3" json:"reason,omitempty"`
	ResponseId    string                 `protobuf:"bytes,2,opt,name=response_id,json=responseId,proto3" json:"response_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IncompleteIndicator) Reset() {
	*x = IncompleteIndicator{}
	mi := &file_chat_v1_chat_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IncompleteIndicator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IncompleteIndicator) ProtoMessage() {}

func (x *IncompleteIndicator) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IncompleteIndicator.ProtoReflect.Descriptor instead.
func (*IncompleteIndicator) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{22}
}

func (x *IncompleteIndicator) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *IncompleteIndicator) GetResponseId() string {
	if x != nil {
		return x.ResponseId
	}
	return ""
}

type StreamPartEnd struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MessageId     string                 `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	Payload       *MessagePayload        `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamPartEnd) Reset() {
	*x = StreamPartEnd{}
	mi := &file_chat_v1_chat_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamPartEnd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamPartEnd) ProtoMessage() {}

func (x *StreamPartEnd) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamPartEnd.ProtoReflect.Descriptor instead.
func (*StreamPartEnd) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{23}
}

func (x *StreamPartEnd) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *StreamPartEnd) GetPayload() *MessagePayload {
	if x != nil {
		return x.Payload
	}
	return nil
}

// Sent when the current AI response is fully streamed
type StreamFinalization struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ConversationId string                 `protobuf:"bytes,1,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *StreamFinalization) Reset() {
	*x = StreamFinalization{}
	mi := &file_chat_v1_chat_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamFinalization) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamFinalization) ProtoMessage() {}

func (x *StreamFinalization) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamFinalization.ProtoReflect.Descriptor instead.
func (*StreamFinalization) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{24}
}

func (x *StreamFinalization) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

type StreamError struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ErrorMessage  string                 `protobuf:"bytes,1,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamError) Reset() {
	*x = StreamError{}
	mi := &file_chat_v1_chat_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamError) ProtoMessage() {}

func (x *StreamError) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamError.ProtoReflect.Descriptor instead.
func (*StreamError) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{25}
}

func (x *StreamError) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// This message should be the same as CreateConversationMessageRequest
// Note: If conversation_id is provided,
//
//	the conversation will be created and returned.
type CreateConversationMessageStreamRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	ProjectId        string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	ConversationId   *string                `protobuf:"bytes,2,opt,name=conversation_id,json=conversationId,proto3,oneof" json:"conversation_id,omitempty"`
	LanguageModel    LanguageModel          `protobuf:"varint,3,opt,name=language_model,json=languageModel,proto3,enum=chat.v1.LanguageModel" json:"language_model,omitempty"`
	UserMessage      string                 `protobuf:"bytes,4,opt,name=user_message,json=userMessage,proto3" json:"user_message,omitempty"`
	UserSelectedText *string                `protobuf:"bytes,5,opt,name=user_selected_text,json=userSelectedText,proto3,oneof" json:"user_selected_text,omitempty"`
	ConversationType *ConversationType      `protobuf:"varint,6,opt,name=conversation_type,json=conversationType,proto3,enum=chat.v1.ConversationType,oneof" json:"conversation_type,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CreateConversationMessageStreamRequest) Reset() {
	*x = CreateConversationMessageStreamRequest{}
	mi := &file_chat_v1_chat_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateConversationMessageStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateConversationMessageStreamRequest) ProtoMessage() {}

func (x *CreateConversationMessageStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateConversationMessageStreamRequest.ProtoReflect.Descriptor instead.
func (*CreateConversationMessageStreamRequest) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{26}
}

func (x *CreateConversationMessageStreamRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *CreateConversationMessageStreamRequest) GetConversationId() string {
	if x != nil && x.ConversationId != nil {
		return *x.ConversationId
	}
	return ""
}

func (x *CreateConversationMessageStreamRequest) GetLanguageModel() LanguageModel {
	if x != nil {
		return x.LanguageModel
	}
	return LanguageModel_LANGUAGE_MODEL_UNSPECIFIED
}

func (x *CreateConversationMessageStreamRequest) GetUserMessage() string {
	if x != nil {
		return x.UserMessage
	}
	return ""
}

func (x *CreateConversationMessageStreamRequest) GetUserSelectedText() string {
	if x != nil && x.UserSelectedText != nil {
		return *x.UserSelectedText
	}
	return ""
}

func (x *CreateConversationMessageStreamRequest) GetConversationType() ConversationType {
	if x != nil && x.ConversationType != nil {
		return *x.ConversationType
	}
	return ConversationType_CONVERSATION_TYPE_DEFAULT
}

// Response for streaming a message within an existing conversation
type CreateConversationMessageStreamResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to ResponsePayload:
	//
	//	*CreateConversationMessageStreamResponse_StreamInitialization
	//	*CreateConversationMessageStreamResponse_StreamPartBegin
	//	*CreateConversationMessageStreamResponse_MessageChunk
	//	*CreateConversationMessageStreamResponse_IncompleteIndicator
	//	*CreateConversationMessageStreamResponse_StreamPartEnd
	//	*CreateConversationMessageStreamResponse_StreamFinalization
	//	*CreateConversationMessageStreamResponse_StreamError
	ResponsePayload isCreateConversationMessageStreamResponse_ResponsePayload `protobuf_oneof:"response_payload"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CreateConversationMessageStreamResponse) Reset() {
	*x = CreateConversationMessageStreamResponse{}
	mi := &file_chat_v1_chat_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateConversationMessageStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateConversationMessageStreamResponse) ProtoMessage() {}

func (x *CreateConversationMessageStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateConversationMessageStreamResponse.ProtoReflect.Descriptor instead.
func (*CreateConversationMessageStreamResponse) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{27}
}

func (x *CreateConversationMessageStreamResponse) GetResponsePayload() isCreateConversationMessageStreamResponse_ResponsePayload {
	if x != nil {
		return x.ResponsePayload
	}
	return nil
}

func (x *CreateConversationMessageStreamResponse) GetStreamInitialization() *StreamInitialization {
	if x != nil {
		if x, ok := x.ResponsePayload.(*CreateConversationMessageStreamResponse_StreamInitialization); ok {
			return x.StreamInitialization
		}
	}
	return nil
}

func (x *CreateConversationMessageStreamResponse) GetStreamPartBegin() *StreamPartBegin {
	if x != nil {
		if x, ok := x.ResponsePayload.(*CreateConversationMessageStreamResponse_StreamPartBegin); ok {
			return x.StreamPartBegin
		}
	}
	return nil
}

func (x *CreateConversationMessageStreamResponse) GetMessageChunk() *MessageChunk {
	if x != nil {
		if x, ok := x.ResponsePayload.(*CreateConversationMessageStreamResponse_MessageChunk); ok {
			return x.MessageChunk
		}
	}
	return nil
}

func (x *CreateConversationMessageStreamResponse) GetIncompleteIndicator() *IncompleteIndicator {
	if x != nil {
		if x, ok := x.ResponsePayload.(*CreateConversationMessageStreamResponse_IncompleteIndicator); ok {
			return x.IncompleteIndicator
		}
	}
	return nil
}

func (x *CreateConversationMessageStreamResponse) GetStreamPartEnd() *StreamPartEnd {
	if x != nil {
		if x, ok := x.ResponsePayload.(*CreateConversationMessageStreamResponse_StreamPartEnd); ok {
			return x.StreamPartEnd
		}
	}
	return nil
}

func (x *CreateConversationMessageStreamResponse) GetStreamFinalization() *StreamFinalization {
	if x != nil {
		if x, ok := x.ResponsePayload.(*CreateConversationMessageStreamResponse_StreamFinalization); ok {
			return x.StreamFinalization
		}
	}
	return nil
}

func (x *CreateConversationMessageStreamResponse) GetStreamError() *StreamError {
	if x != nil {
		if x, ok := x.ResponsePayload.(*CreateConversationMessageStreamResponse_StreamError); ok {
			return x.StreamError
		}
	}
	return nil
}

type isCreateConversationMessageStreamResponse_ResponsePayload interface {
	isCreateConversationMessageStreamResponse_ResponsePayload()
}

type CreateConversationMessageStreamResponse_StreamInitialization struct {
	StreamInitialization *StreamInitialization `protobuf:"bytes,1,opt,name=stream_initialization,json=streamInitialization,proto3,oneof"`
}

type CreateConversationMessageStreamResponse_StreamPartBegin struct {
	StreamPartBegin *StreamPartBegin `protobuf:"bytes,2,opt,name=stream_part_begin,json=streamPartBegin,proto3,oneof"`
}

type CreateConversationMessageStreamResponse_MessageChunk struct {
	MessageChunk *MessageChunk `protobuf:"bytes,3,opt,name=message_chunk,json=messageChunk,proto3,oneof"`
}

type CreateConversationMessageStreamResponse_IncompleteIndicator struct {
	IncompleteIndicator *IncompleteIndicator `protobuf:"bytes,4,opt,name=incomplete_indicator,json=incompleteIndicator,proto3,oneof"`
}

type CreateConversationMessageStreamResponse_StreamPartEnd struct {
	StreamPartEnd *StreamPartEnd `protobuf:"bytes,5,opt,name=stream_part_end,json=streamPartEnd,proto3,oneof"`
}

type CreateConversationMessageStreamResponse_StreamFinalization struct {
	StreamFinalization *StreamFinalization `protobuf:"bytes,6,opt,name=stream_finalization,json=streamFinalization,proto3,oneof"`
}

type CreateConversationMessageStreamResponse_StreamError struct {
	StreamError *StreamError `protobuf:"bytes,7,opt,name=stream_error,json=streamError,proto3,oneof"`
}

func (*CreateConversationMessageStreamResponse_StreamInitialization) isCreateConversationMessageStreamResponse_ResponsePayload() {
}

func (*CreateConversationMessageStreamResponse_StreamPartBegin) isCreateConversationMessageStreamResponse_ResponsePayload() {
}

func (*CreateConversationMessageStreamResponse_MessageChunk) isCreateConversationMessageStreamResponse_ResponsePayload() {
}

func (*CreateConversationMessageStreamResponse_IncompleteIndicator) isCreateConversationMessageStreamResponse_ResponsePayload() {
}

func (*CreateConversationMessageStreamResponse_StreamPartEnd) isCreateConversationMessageStreamResponse_ResponsePayload() {
}

func (*CreateConversationMessageStreamResponse_StreamFinalization) isCreateConversationMessageStreamResponse_ResponsePayload() {
}

func (*CreateConversationMessageStreamResponse_StreamError) isCreateConversationMessageStreamResponse_ResponsePayload() {
}

var File_chat_v1_chat_proto protoreflect.FileDescriptor

const file_chat_v1_chat_proto_rawDesc = "" +
	"\n" +
	"\x12chat/v1/chat.proto\x12\achat.v1\x1a\x1cgoogle/api/annotations.proto\x1a\x16shared/v1/shared.proto\"k\n" +
	"\x13MessageTypeToolCall\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04args\x18\x02 \x01(\tR\x04args\x12\x16\n" +
	"\x06result\x18\x03 \x01(\tR\x06result\x12\x14\n" +
	"\x05error\x18\x04 \x01(\tR\x05error\"M\n" +
	"#MessageTypeToolCallPrepareArguments\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04args\x18\x02 \x01(\tR\x04args\"-\n" +
	"\x11MessageTypeSystem\x12\x18\n" +
	"\acontent\x18\x01 \x01(\tR\acontent\"0\n" +
	"\x14MessageTypeAssistant\x12\x18\n" +
	"\acontent\x18\x01 \x01(\tR\acontent\"g\n" +
	"\x0fMessageTypeUser\x12\x18\n" +
	"\acontent\x18\x01 \x01(\tR\acontent\x12(\n" +
	"\rselected_text\x18\x02 \x01(\tH\x00R\fselectedText\x88\x01\x01B\x10\n" +
	"\x0e_selected_text\"6\n" +
	"\x12MessageTypeUnknown\x12 \n" +
	"\vdescription\x18\x01 \x01(\tR\vdescription\"\xaa\x03\n" +
	"\x0eMessagePayload\x124\n" +
	"\x06system\x18\x01 \x01(\v2\x1a.chat.v1.MessageTypeSystemH\x00R\x06system\x12.\n" +
	"\x04user\x18\x02 \x01(\v2\x18.chat.v1.MessageTypeUserH\x00R\x04user\x12=\n" +
	"\tassistant\x18\x03 \x01(\v2\x1d.chat.v1.MessageTypeAssistantH\x00R\tassistant\x12m\n" +
	"\x1btool_call_prepare_arguments\x18\x04 \x01(\v2,.chat.v1.MessageTypeToolCallPrepareArgumentsH\x00R\x18toolCallPrepareArguments\x12;\n" +
	"\ttool_call\x18\x05 \x01(\v2\x1c.chat.v1.MessageTypeToolCallH\x00R\btoolCall\x127\n" +
	"\aunknown\x18\x06 \x01(\v2\x1b.chat.v1.MessageTypeUnknownH\x00R\aunknownB\x0e\n" +
	"\fmessage_type\"[\n" +
	"\aMessage\x12\x1d\n" +
	"\n" +
	"message_id\x18\x01 \x01(\tR\tmessageId\x121\n" +
	"\apayload\x18\x03 \x01(\v2\x17.chat.v1.MessagePayloadR\apayload\"\xa1\x01\n" +
	"\fConversation\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05title\x18\x03 \x01(\tR\x05title\x12=\n" +
	"\x0elanguage_model\x18\x02 \x01(\x0e2\x16.chat.v1.LanguageModelR\rlanguageModel\x12,\n" +
	"\bmessages\x18\x04 \x03(\v2\x10.chat.v1.MessageR\bmessages\"M\n" +
	"\x18ListConversationsRequest\x12\"\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tH\x00R\tprojectId\x88\x01\x01B\r\n" +
	"\v_project_id\"X\n" +
	"\x19ListConversationsResponse\x12;\n" +
	"\rconversations\x18\x01 \x03(\v2\x15.chat.v1.ConversationR\rconversations\"A\n" +
	"\x16GetConversationRequest\x12'\n" +
	"\x0fconversation_id\x18\x01 \x01(\tR\x0econversationId\"T\n" +
	"\x17GetConversationResponse\x129\n" +
	"\fconversation\x18\x01 \x01(\v2\x15.chat.v1.ConversationR\fconversation\"\x92\x03\n" +
	" CreateConversationMessageRequest\x12\x1d\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tR\tprojectId\x12,\n" +
	"\x0fconversation_id\x18\x02 \x01(\tH\x00R\x0econversationId\x88\x01\x01\x12=\n" +
	"\x0elanguage_model\x18\x03 \x01(\x0e2\x16.chat.v1.LanguageModelR\rlanguageModel\x12!\n" +
	"\fuser_message\x18\x04 \x01(\tR\vuserMessage\x121\n" +
	"\x12user_selected_text\x18\x05 \x01(\tH\x01R\x10userSelectedText\x88\x01\x01\x12K\n" +
	"\x11conversation_type\x18\x06 \x01(\x0e2\x19.chat.v1.ConversationTypeH\x02R\x10conversationType\x88\x01\x01B\x12\n" +
	"\x10_conversation_idB\x15\n" +
	"\x13_user_selected_textB\x14\n" +
	"\x12_conversation_type\"^\n" +
	"!CreateConversationMessageResponse\x129\n" +
	"\fconversation\x18\x01 \x01(\v2\x15.chat.v1.ConversationR\fconversation\"Z\n" +
	"\x19UpdateConversationRequest\x12'\n" +
	"\x0fconversation_id\x18\x01 \x01(\tR\x0econversationId\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\"W\n" +
	"\x1aUpdateConversationResponse\x129\n" +
	"\fconversation\x18\x01 \x01(\v2\x15.chat.v1.ConversationR\fconversation\"D\n" +
	"\x19DeleteConversationRequest\x12'\n" +
	"\x0fconversation_id\x18\x01 \x01(\tR\x0econversationId\"\x1c\n" +
	"\x1aDeleteConversationResponse\"~\n" +
	"\x14StreamInitialization\x12'\n" +
	"\x0fconversation_id\x18\x01 \x01(\tR\x0econversationId\x12=\n" +
	"\x0elanguage_model\x18\x05 \x01(\x0e2\x16.chat.v1.LanguageModelR\rlanguageModel\"c\n" +
	"\x0fStreamPartBegin\x12\x1d\n" +
	"\n" +
	"message_id\x18\x01 \x01(\tR\tmessageId\x121\n" +
	"\apayload\x18\x03 \x01(\v2\x17.chat.v1.MessagePayloadR\apayload\"C\n" +
	"\fMessageChunk\x12\x1d\n" +
	"\n" +
	"message_id\x18\x01 \x01(\tR\tmessageId\x12\x14\n" +
	"\x05delta\x18\x02 \x01(\tR\x05delta\"N\n" +
	"\x13IncompleteIndicator\x12\x16\n" +
	"\x06reason\x18\x01 \x01(\tR\x06reason\x12\x1f\n" +
	"\vresponse_id\x18\x02 \x01(\tR\n" +
	"responseId\"a\n" +
	"\rStreamPartEnd\x12\x1d\n" +
	"\n" +
	"message_id\x18\x01 \x01(\tR\tmessageId\x121\n" +
	"\apayload\x18\x03 \x01(\v2\x17.chat.v1.MessagePayloadR\apayload\"=\n" +
	"\x12StreamFinalization\x12'\n" +
	"\x0fconversation_id\x18\x01 \x01(\tR\x0econversationId\"2\n" +
	"\vStreamError\x12#\n" +
	"\rerror_message\x18\x01 \x01(\tR\ferrorMessage\"\x98\x03\n" +
	"&CreateConversationMessageStreamRequest\x12\x1d\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tR\tprojectId\x12,\n" +
	"\x0fconversation_id\x18\x02 \x01(\tH\x00R\x0econversationId\x88\x01\x01\x12=\n" +
	"\x0elanguage_model\x18\x03 \x01(\x0e2\x16.chat.v1.LanguageModelR\rlanguageModel\x12!\n" +
	"\fuser_message\x18\x04 \x01(\tR\vuserMessage\x121\n" +
	"\x12user_selected_text\x18\x05 \x01(\tH\x01R\x10userSelectedText\x88\x01\x01\x12K\n" +
	"\x11conversation_type\x18\x06 \x01(\x0e2\x19.chat.v1.ConversationTypeH\x02R\x10conversationType\x88\x01\x01B\x12\n" +
	"\x10_conversation_idB\x15\n" +
	"\x13_user_selected_textB\x14\n" +
	"\x12_conversation_type\"\xb9\x04\n" +
	"'CreateConversationMessageStreamResponse\x12T\n" +
	"\x15stream_initialization\x18\x01 \x01(\v2\x1d.chat.v1.StreamInitializationH\x00R\x14streamInitialization\x12F\n" +
	"\x11stream_part_begin\x18\x02 \x01(\v2\x18.chat.v1.StreamPartBeginH\x00R\x0fstreamPartBegin\x12<\n" +
	"\rmessage_chunk\x18\x03 \x01(\v2\x15.chat.v1.MessageChunkH\x00R\fmessageChunk\x12Q\n" +
	"\x14incomplete_indicator\x18\x04 \x01(\v2\x1c.chat.v1.IncompleteIndicatorH\x00R\x13incompleteIndicator\x12@\n" +
	"\x0fstream_part_end\x18\x05 \x01(\v2\x16.chat.v1.StreamPartEndH\x00R\rstreamPartEnd\x12N\n" +
	"\x13stream_finalization\x18\x06 \x01(\v2\x1b.chat.v1.StreamFinalizationH\x00R\x12streamFinalization\x129\n" +
	"\fstream_error\x18\a \x01(\v2\x14.chat.v1.StreamErrorH\x00R\vstreamErrorB\x12\n" +
	"\x10response_payload*\x81\x02\n" +
	"\rLanguageModel\x12\x1e\n" +
	"\x1aLANGUAGE_MODEL_UNSPECIFIED\x10\x00\x12\x1f\n" +
	"\x1bLANGUAGE_MODEL_OPENAI_GPT4O\x10\x01\x12$\n" +
	" LANGUAGE_MODEL_OPENAI_GPT41_MINI\x10\x02\x12\x1f\n" +
	"\x1bLANGUAGE_MODEL_OPENAI_GPT41\x10\x04\x12\x1e\n" +
	"\x1aLANGUAGE_MODEL_OPENAI_GPT5\x10\a\x12#\n" +
	"\x1fLANGUAGE_MODEL_OPENAI_GPT5_MINI\x10\b\x12#\n" +
	"\x1fLANGUAGE_MODEL_OPENAI_GPT5_NANO\x10\t*N\n" +
	"\x10ConversationType\x12\x1d\n" +
	"\x19CONVERSATION_TYPE_DEFAULT\x10\x00\x12\x1b\n" +
	"\x17CONVERSATION_TYPE_DEBUG\x10\x012\xcd\a\n" +
	"\vChatService\x12\x83\x01\n" +
	"\x11ListConversations\x12!.chat.v1.ListConversationsRequest\x1a\".chat.v1.ListConversationsResponse\"'\x82\xd3\xe4\x93\x02!\x12\x1f/_pd/api/v1/chats/conversations\x12\x8f\x01\n" +
	"\x0fGetConversation\x12\x1f.chat.v1.GetConversationRequest\x1a .chat.v1.GetConversationResponse\"9\x82\xd3\xe4\x93\x023\x121/_pd/api/v1/chats/conversations/{conversation_id}\x12\xa7\x01\n" +
	"\x19CreateConversationMessage\x12).chat.v1.CreateConversationMessageRequest\x1a*.chat.v1.CreateConversationMessageResponse\"3\x82\xd3\xe4\x93\x02-:\x01*\"(/_pd/api/v1/chats/conversations/messages\x12\xc2\x01\n" +
	"\x1fCreateConversationMessageStream\x12/.chat.v1.CreateConversationMessageStreamRequest\x1a0.chat.v1.CreateConversationMessageStreamResponse\":\x82\xd3\xe4\x93\x024:\x01*\"//_pd/api/v1/chats/conversations/messages/stream0\x01\x12\x9b\x01\n" +
	"\x12UpdateConversation\x12\".chat.v1.UpdateConversationRequest\x1a#.chat.v1.UpdateConversationResponse\"<\x82\xd3\xe4\x93\x026:\x01*21/_pd/api/v1/chats/conversations/{conversation_id}\x12\x98\x01\n" +
	"\x12DeleteConversation\x12\".chat.v1.DeleteConversationRequest\x1a#.chat.v1.DeleteConversationResponse\"9\x82\xd3\xe4\x93\x023*1/_pd/api/v1/chats/conversations/{conversation_id}B\x7f\n" +
	"\vcom.chat.v1B\tChatProtoP\x01Z(paperdebugger/pkg/gen/api/chat/v1;chatv1\xa2\x02\x03CXX\xaa\x02\aChat.V1\xca\x02\aChat\\V1\xe2\x02\x13Chat\\V1\\GPBMetadata\xea\x02\bChat::V1b\x06proto3"

var (
	file_chat_v1_chat_proto_rawDescOnce sync.Once
	file_chat_v1_chat_proto_rawDescData []byte
)

func file_chat_v1_chat_proto_rawDescGZIP() []byte {
	file_chat_v1_chat_proto_rawDescOnce.Do(func() {
		file_chat_v1_chat_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_chat_v1_chat_proto_rawDesc), len(file_chat_v1_chat_proto_rawDesc)))
	})
	return file_chat_v1_chat_proto_rawDescData
}

var file_chat_v1_chat_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_chat_v1_chat_proto_msgTypes = make([]protoimpl.MessageInfo, 28)
var file_chat_v1_chat_proto_goTypes = []any{
	(LanguageModel)(0),                              // 0: chat.v1.LanguageModel
	(ConversationType)(0),                           // 1: chat.v1.ConversationType
	(*MessageTypeToolCall)(nil),                     // 2: chat.v1.MessageTypeToolCall
	(*MessageTypeToolCallPrepareArguments)(nil),     // 3: chat.v1.MessageTypeToolCallPrepareArguments
	(*MessageTypeSystem)(nil),                       // 4: chat.v1.MessageTypeSystem
	(*MessageTypeAssistant)(nil),                    // 5: chat.v1.MessageTypeAssistant
	(*MessageTypeUser)(nil),                         // 6: chat.v1.MessageTypeUser
	(*MessageTypeUnknown)(nil),                      // 7: chat.v1.MessageTypeUnknown
	(*MessagePayload)(nil),                          // 8: chat.v1.MessagePayload
	(*Message)(nil),                                 // 9: chat.v1.Message
	(*Conversation)(nil),                            // 10: chat.v1.Conversation
	(*ListConversationsRequest)(nil),                // 11: chat.v1.ListConversationsRequest
	(*ListConversationsResponse)(nil),               // 12: chat.v1.ListConversationsResponse
	(*GetConversationRequest)(nil),                  // 13: chat.v1.GetConversationRequest
	(*GetConversationResponse)(nil),                 // 14: chat.v1.GetConversationResponse
	(*CreateConversationMessageRequest)(nil),        // 15: chat.v1.CreateConversationMessageRequest
	(*CreateConversationMessageResponse)(nil),       // 16: chat.v1.CreateConversationMessageResponse
	(*UpdateConversationRequest)(nil),               // 17: chat.v1.UpdateConversationRequest
	(*UpdateConversationResponse)(nil),              // 18: chat.v1.UpdateConversationResponse
	(*DeleteConversationRequest)(nil),               // 19: chat.v1.DeleteConversationRequest
	(*DeleteConversationResponse)(nil),              // 20: chat.v1.DeleteConversationResponse
	(*StreamInitialization)(nil),                    // 21: chat.v1.StreamInitialization
	(*StreamPartBegin)(nil),                         // 22: chat.v1.StreamPartBegin
	(*MessageChunk)(nil),                            // 23: chat.v1.MessageChunk
	(*IncompleteIndicator)(nil),                     // 24: chat.v1.IncompleteIndicator
	(*StreamPartEnd)(nil),                           // 25: chat.v1.StreamPartEnd
	(*StreamFinalization)(nil),                      // 26: chat.v1.StreamFinalization
	(*StreamError)(nil),                             // 27: chat.v1.StreamError
	(*CreateConversationMessageStreamRequest)(nil),  // 28: chat.v1.CreateConversationMessageStreamRequest
	(*CreateConversationMessageStreamResponse)(nil), // 29: chat.v1.CreateConversationMessageStreamResponse
}
var file_chat_v1_chat_proto_depIdxs = []int32{
	4,  // 0: chat.v1.MessagePayload.system:type_name -> chat.v1.MessageTypeSystem
	6,  // 1: chat.v1.MessagePayload.user:type_name -> chat.v1.MessageTypeUser
	5,  // 2: chat.v1.MessagePayload.assistant:type_name -> chat.v1.MessageTypeAssistant
	3,  // 3: chat.v1.MessagePayload.tool_call_prepare_arguments:type_name -> chat.v1.MessageTypeToolCallPrepareArguments
	2,  // 4: chat.v1.MessagePayload.tool_call:type_name -> chat.v1.MessageTypeToolCall
	7,  // 5: chat.v1.MessagePayload.unknown:type_name -> chat.v1.MessageTypeUnknown
	8,  // 6: chat.v1.Message.payload:type_name -> chat.v1.MessagePayload
	0,  // 7: chat.v1.Conversation.language_model:type_name -> chat.v1.LanguageModel
	9,  // 8: chat.v1.Conversation.messages:type_name -> chat.v1.Message
	10, // 9: chat.v1.ListConversationsResponse.conversations:type_name -> chat.v1.Conversation
	10, // 10: chat.v1.GetConversationResponse.conversation:type_name -> chat.v1.Conversation
	0,  // 11: chat.v1.CreateConversationMessageRequest.language_model:type_name -> chat.v1.LanguageModel
	1,  // 12: chat.v1.CreateConversationMessageRequest.conversation_type:type_name -> chat.v1.ConversationType
	10, // 13: chat.v1.CreateConversationMessageResponse.conversation:type_name -> chat.v1.Conversation
	10, // 14: chat.v1.UpdateConversationResponse.conversation:type_name -> chat.v1.Conversation
	0,  // 15: chat.v1.StreamInitialization.language_model:type_name -> chat.v1.LanguageModel
	8,  // 16: chat.v1.StreamPartBegin.payload:type_name -> chat.v1.MessagePayload
	8,  // 17: chat.v1.StreamPartEnd.payload:type_name -> chat.v1.MessagePayload
	0,  // 18: chat.v1.CreateConversationMessageStreamRequest.language_model:type_name -> chat.v1.LanguageModel
	1,  // 19: chat.v1.CreateConversationMessageStreamRequest.conversation_type:type_name -> chat.v1.ConversationType
	21, // 20: chat.v1.CreateConversationMessageStreamResponse.stream_initialization:type_name -> chat.v1.StreamInitialization
	22, // 21: chat.v1.CreateConversationMessageStreamResponse.stream_part_begin:type_name -> chat.v1.StreamPartBegin
	23, // 22: chat.v1.CreateConversationMessageStreamResponse.message_chunk:type_name -> chat.v1.MessageChunk
	24, // 23: chat.v1.CreateConversationMessageStreamResponse.incomplete_indicator:type_name -> chat.v1.IncompleteIndicator
	25, // 24: chat.v1.CreateConversationMessageStreamResponse.stream_part_end:type_name -> chat.v1.StreamPartEnd
	26, // 25: chat.v1.CreateConversationMessageStreamResponse.stream_finalization:type_name -> chat.v1.StreamFinalization
	27, // 26: chat.v1.CreateConversationMessageStreamResponse.stream_error:type_name -> chat.v1.StreamError
	11, // 27: chat.v1.ChatService.ListConversations:input_type -> chat.v1.ListConversationsRequest
	13, // 28: chat.v1.ChatService.GetConversation:input_type -> chat.v1.GetConversationRequest
	15, // 29: chat.v1.ChatService.CreateConversationMessage:input_type -> chat.v1.CreateConversationMessageRequest
	28, // 30: chat.v1.ChatService.CreateConversationMessageStream:input_type -> chat.v1.CreateConversationMessageStreamRequest
	17, // 31: chat.v1.ChatService.UpdateConversation:input_type -> chat.v1.UpdateConversationRequest
	19, // 32: chat.v1.ChatService.DeleteConversation:input_type -> chat.v1.DeleteConversationRequest
	12, // 33: chat.v1.ChatService.ListConversations:output_type -> chat.v1.ListConversationsResponse
	14, // 34: chat.v1.ChatService.GetConversation:output_type -> chat.v1.GetConversationResponse
	16, // 35: chat.v1.ChatService.CreateConversationMessage:output_type -> chat.v1.CreateConversationMessageResponse
	29, // 36: chat.v1.ChatService.CreateConversationMessageStream:output_type -> chat.v1.CreateConversationMessageStreamResponse
	18, // 37: chat.v1.ChatService.UpdateConversation:output_type -> chat.v1.UpdateConversationResponse
	20, // 38: chat.v1.ChatService.DeleteConversation:output_type -> chat.v1.DeleteConversationResponse
	33, // [33:39] is the sub-list for method output_type
	27, // [27:33] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() { file_chat_v1_chat_proto_init() }
func file_chat_v1_chat_proto_init() {
	if File_chat_v1_chat_proto != nil {
		return
	}
	file_chat_v1_chat_proto_msgTypes[4].OneofWrappers = []any{}
	file_chat_v1_chat_proto_msgTypes[6].OneofWrappers = []any{
		(*MessagePayload_System)(nil),
		(*MessagePayload_User)(nil),
		(*MessagePayload_Assistant)(nil),
		(*MessagePayload_ToolCallPrepareArguments)(nil),
		(*MessagePayload_ToolCall)(nil),
		(*MessagePayload_Unknown)(nil),
	}
	file_chat_v1_chat_proto_msgTypes[9].OneofWrappers = []any{}
	file_chat_v1_chat_proto_msgTypes[13].OneofWrappers = []any{}
	file_chat_v1_chat_proto_msgTypes[26].OneofWrappers = []any{}
	file_chat_v1_chat_proto_msgTypes[27].OneofWrappers = []any{
		(*CreateConversationMessageStreamResponse_StreamInitialization)(nil),
		(*CreateConversationMessageStreamResponse_StreamPartBegin)(nil),
		(*CreateConversationMessageStreamResponse_MessageChunk)(nil),
		(*CreateConversationMessageStreamResponse_IncompleteIndicator)(nil),
		(*CreateConversationMessageStreamResponse_StreamPartEnd)(nil),
		(*CreateConversationMessageStreamResponse_StreamFinalization)(nil),
		(*CreateConversationMessageStreamResponse_StreamError)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_chat_v1_chat_proto_rawDesc), len(file_chat_v1_chat_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   28,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_chat_v1_chat_proto_goTypes,
		DependencyIndexes: file_chat_v1_chat_proto_depIdxs,
		EnumInfos:         file_chat_v1_chat_proto_enumTypes,
		MessageInfos:      file_chat_v1_chat_proto_msgTypes,
	}.Build()
	File_chat_v1_chat_proto = out.File
	file_chat_v1_chat_proto_goTypes = nil
	file_chat_v1_chat_proto_depIdxs = nil
}
