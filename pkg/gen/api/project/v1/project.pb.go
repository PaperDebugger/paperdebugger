// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: project/v1/project.proto

package projectv1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Project struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Name          string                 `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	RootDocId     string                 `protobuf:"bytes,5,opt,name=root_doc_id,json=rootDocId,proto3" json:"root_doc_id,omitempty"`
	Docs          []*ProjectDoc          `protobuf:"bytes,6,rep,name=docs,proto3" json:"docs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Project) Reset() {
	*x = Project{}
	mi := &file_project_v1_project_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Project) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Project) ProtoMessage() {}

func (x *Project) ProtoReflect() protoreflect.Message {
	mi := &file_project_v1_project_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Project.ProtoReflect.Descriptor instead.
func (*Project) Descriptor() ([]byte, []int) {
	return file_project_v1_project_proto_rawDescGZIP(), []int{0}
}

func (x *Project) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Project) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Project) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Project) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Project) GetRootDocId() string {
	if x != nil {
		return x.RootDocId
	}
	return ""
}

func (x *Project) GetDocs() []*ProjectDoc {
	if x != nil {
		return x.Docs
	}
	return nil
}

type ProjectDoc struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Version       int32                  `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	Filepath      string                 `protobuf:"bytes,3,opt,name=filepath,proto3" json:"filepath,omitempty"`
	Lines         []string               `protobuf:"bytes,4,rep,name=lines,proto3" json:"lines,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProjectDoc) Reset() {
	*x = ProjectDoc{}
	mi := &file_project_v1_project_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectDoc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectDoc) ProtoMessage() {}

func (x *ProjectDoc) ProtoReflect() protoreflect.Message {
	mi := &file_project_v1_project_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectDoc.ProtoReflect.Descriptor instead.
func (*ProjectDoc) Descriptor() ([]byte, []int) {
	return file_project_v1_project_proto_rawDescGZIP(), []int{1}
}

func (x *ProjectDoc) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ProjectDoc) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *ProjectDoc) GetFilepath() string {
	if x != nil {
		return x.Filepath
	}
	return ""
}

func (x *ProjectDoc) GetLines() []string {
	if x != nil {
		return x.Lines
	}
	return nil
}

type UpsertProjectRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectId     string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	RootDocId     string                 `protobuf:"bytes,3,opt,name=root_doc_id,json=rootDocId,proto3" json:"root_doc_id,omitempty"`
	Docs          []*ProjectDoc          `protobuf:"bytes,4,rep,name=docs,proto3" json:"docs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpsertProjectRequest) Reset() {
	*x = UpsertProjectRequest{}
	mi := &file_project_v1_project_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpsertProjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertProjectRequest) ProtoMessage() {}

func (x *UpsertProjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_project_v1_project_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertProjectRequest.ProtoReflect.Descriptor instead.
func (*UpsertProjectRequest) Descriptor() ([]byte, []int) {
	return file_project_v1_project_proto_rawDescGZIP(), []int{2}
}

func (x *UpsertProjectRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *UpsertProjectRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpsertProjectRequest) GetRootDocId() string {
	if x != nil {
		return x.RootDocId
	}
	return ""
}

func (x *UpsertProjectRequest) GetDocs() []*ProjectDoc {
	if x != nil {
		return x.Docs
	}
	return nil
}

type UpsertProjectResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Project       *Project               `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpsertProjectResponse) Reset() {
	*x = UpsertProjectResponse{}
	mi := &file_project_v1_project_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpsertProjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertProjectResponse) ProtoMessage() {}

func (x *UpsertProjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_project_v1_project_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertProjectResponse.ProtoReflect.Descriptor instead.
func (*UpsertProjectResponse) Descriptor() ([]byte, []int) {
	return file_project_v1_project_proto_rawDescGZIP(), []int{3}
}

func (x *UpsertProjectResponse) GetProject() *Project {
	if x != nil {
		return x.Project
	}
	return nil
}

type GetProjectRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectId     string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetProjectRequest) Reset() {
	*x = GetProjectRequest{}
	mi := &file_project_v1_project_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectRequest) ProtoMessage() {}

func (x *GetProjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_project_v1_project_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectRequest.ProtoReflect.Descriptor instead.
func (*GetProjectRequest) Descriptor() ([]byte, []int) {
	return file_project_v1_project_proto_rawDescGZIP(), []int{4}
}

func (x *GetProjectRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

type GetProjectResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Project       *Project               `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetProjectResponse) Reset() {
	*x = GetProjectResponse{}
	mi := &file_project_v1_project_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectResponse) ProtoMessage() {}

func (x *GetProjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_project_v1_project_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectResponse.ProtoReflect.Descriptor instead.
func (*GetProjectResponse) Descriptor() ([]byte, []int) {
	return file_project_v1_project_proto_rawDescGZIP(), []int{5}
}

func (x *GetProjectResponse) GetProject() *Project {
	if x != nil {
		return x.Project
	}
	return nil
}

// Paper score
type RunProjectPaperScoreRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ProjectId      string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	ConversationId string                 `protobuf:"bytes,2,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RunProjectPaperScoreRequest) Reset() {
	*x = RunProjectPaperScoreRequest{}
	mi := &file_project_v1_project_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunProjectPaperScoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunProjectPaperScoreRequest) ProtoMessage() {}

func (x *RunProjectPaperScoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_project_v1_project_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunProjectPaperScoreRequest.ProtoReflect.Descriptor instead.
func (*RunProjectPaperScoreRequest) Descriptor() ([]byte, []int) {
	return file_project_v1_project_proto_rawDescGZIP(), []int{6}
}

func (x *RunProjectPaperScoreRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *RunProjectPaperScoreRequest) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

type RunProjectPaperScoreResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectId     string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	PaperScore    *PaperScoreResult      `protobuf:"bytes,2,opt,name=paper_score,json=paperScore,proto3" json:"paper_score,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunProjectPaperScoreResponse) Reset() {
	*x = RunProjectPaperScoreResponse{}
	mi := &file_project_v1_project_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunProjectPaperScoreResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunProjectPaperScoreResponse) ProtoMessage() {}

func (x *RunProjectPaperScoreResponse) ProtoReflect() protoreflect.Message {
	mi := &file_project_v1_project_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunProjectPaperScoreResponse.ProtoReflect.Descriptor instead.
func (*RunProjectPaperScoreResponse) Descriptor() ([]byte, []int) {
	return file_project_v1_project_proto_rawDescGZIP(), []int{7}
}

func (x *RunProjectPaperScoreResponse) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *RunProjectPaperScoreResponse) GetPaperScore() *PaperScoreResult {
	if x != nil {
		return x.PaperScore
	}
	return nil
}

// Paper score comment
type RunProjectPaperScoreCommentRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ProjectId      string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	ConversationId string                 `protobuf:"bytes,2,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RunProjectPaperScoreCommentRequest) Reset() {
	*x = RunProjectPaperScoreCommentRequest{}
	mi := &file_project_v1_project_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunProjectPaperScoreCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunProjectPaperScoreCommentRequest) ProtoMessage() {}

func (x *RunProjectPaperScoreCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_project_v1_project_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunProjectPaperScoreCommentRequest.ProtoReflect.Descriptor instead.
func (*RunProjectPaperScoreCommentRequest) Descriptor() ([]byte, []int) {
	return file_project_v1_project_proto_rawDescGZIP(), []int{8}
}

func (x *RunProjectPaperScoreCommentRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *RunProjectPaperScoreCommentRequest) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

type RunProjectPaperScoreCommentResponse struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	ProjectId     string                     `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Comments      []*PaperScoreCommentResult `protobuf:"bytes,2,rep,name=comments,proto3" json:"comments,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunProjectPaperScoreCommentResponse) Reset() {
	*x = RunProjectPaperScoreCommentResponse{}
	mi := &file_project_v1_project_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunProjectPaperScoreCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunProjectPaperScoreCommentResponse) ProtoMessage() {}

func (x *RunProjectPaperScoreCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_project_v1_project_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunProjectPaperScoreCommentResponse.ProtoReflect.Descriptor instead.
func (*RunProjectPaperScoreCommentResponse) Descriptor() ([]byte, []int) {
	return file_project_v1_project_proto_rawDescGZIP(), []int{9}
}

func (x *RunProjectPaperScoreCommentResponse) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *RunProjectPaperScoreCommentResponse) GetComments() []*PaperScoreCommentResult {
	if x != nil {
		return x.Comments
	}
	return nil
}

// Overleaf comment
type RunProjectOverleafCommentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectId     string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Section       string                 `protobuf:"bytes,2,opt,name=section,proto3" json:"section,omitempty"`
	AnchorText    string                 `protobuf:"bytes,3,opt,name=anchor_text,json=anchorText,proto3" json:"anchor_text,omitempty"`
	Comment       string                 `protobuf:"bytes,4,opt,name=comment,proto3" json:"comment,omitempty"`
	Importance    string                 `protobuf:"bytes,5,opt,name=importance,proto3" json:"importance,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunProjectOverleafCommentRequest) Reset() {
	*x = RunProjectOverleafCommentRequest{}
	mi := &file_project_v1_project_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunProjectOverleafCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunProjectOverleafCommentRequest) ProtoMessage() {}

func (x *RunProjectOverleafCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_project_v1_project_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunProjectOverleafCommentRequest.ProtoReflect.Descriptor instead.
func (*RunProjectOverleafCommentRequest) Descriptor() ([]byte, []int) {
	return file_project_v1_project_proto_rawDescGZIP(), []int{10}
}

func (x *RunProjectOverleafCommentRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *RunProjectOverleafCommentRequest) GetSection() string {
	if x != nil {
		return x.Section
	}
	return ""
}

func (x *RunProjectOverleafCommentRequest) GetAnchorText() string {
	if x != nil {
		return x.AnchorText
	}
	return ""
}

func (x *RunProjectOverleafCommentRequest) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *RunProjectOverleafCommentRequest) GetImportance() string {
	if x != nil {
		return x.Importance
	}
	return ""
}

type RunProjectOverleafCommentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectId     string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Comments      []*OverleafComment     `protobuf:"bytes,2,rep,name=comments,proto3" json:"comments,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunProjectOverleafCommentResponse) Reset() {
	*x = RunProjectOverleafCommentResponse{}
	mi := &file_project_v1_project_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunProjectOverleafCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunProjectOverleafCommentResponse) ProtoMessage() {}

func (x *RunProjectOverleafCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_project_v1_project_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunProjectOverleafCommentResponse.ProtoReflect.Descriptor instead.
func (*RunProjectOverleafCommentResponse) Descriptor() ([]byte, []int) {
	return file_project_v1_project_proto_rawDescGZIP(), []int{11}
}

func (x *RunProjectOverleafCommentResponse) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *RunProjectOverleafCommentResponse) GetComments() []*OverleafComment {
	if x != nil {
		return x.Comments
	}
	return nil
}

type OverleafComment struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CommentId     string                 `protobuf:"bytes,1,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"`
	ProjectId     string                 `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	DocId         string                 `protobuf:"bytes,3,opt,name=doc_id,json=docId,proto3" json:"doc_id,omitempty"`
	DocVersion    int32                  `protobuf:"varint,4,opt,name=doc_version,json=docVersion,proto3" json:"doc_version,omitempty"`
	DocSha1       string                 `protobuf:"bytes,5,opt,name=doc_sha1,json=docSha1,proto3" json:"doc_sha1,omitempty"`
	QuotePosition int32                  `protobuf:"varint,6,opt,name=quote_position,json=quotePosition,proto3" json:"quote_position,omitempty"`
	// PaperScoreCommentResult filed:
	QuoteText     string `protobuf:"bytes,7,opt,name=quote_text,json=quoteText,proto3" json:"quote_text,omitempty"`
	Comment       string `protobuf:"bytes,8,opt,name=comment,proto3" json:"comment,omitempty"`
	Importance    string `protobuf:"bytes,9,opt,name=importance,proto3" json:"importance,omitempty"`
	DocPath       string `protobuf:"bytes,10,opt,name=doc_path,json=docPath,proto3" json:"doc_path,omitempty"`
	Section       string `protobuf:"bytes,11,opt,name=section,proto3" json:"section,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OverleafComment) Reset() {
	*x = OverleafComment{}
	mi := &file_project_v1_project_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OverleafComment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OverleafComment) ProtoMessage() {}

func (x *OverleafComment) ProtoReflect() protoreflect.Message {
	mi := &file_project_v1_project_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OverleafComment.ProtoReflect.Descriptor instead.
func (*OverleafComment) Descriptor() ([]byte, []int) {
	return file_project_v1_project_proto_rawDescGZIP(), []int{12}
}

func (x *OverleafComment) GetCommentId() string {
	if x != nil {
		return x.CommentId
	}
	return ""
}

func (x *OverleafComment) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *OverleafComment) GetDocId() string {
	if x != nil {
		return x.DocId
	}
	return ""
}

func (x *OverleafComment) GetDocVersion() int32 {
	if x != nil {
		return x.DocVersion
	}
	return 0
}

func (x *OverleafComment) GetDocSha1() string {
	if x != nil {
		return x.DocSha1
	}
	return ""
}

func (x *OverleafComment) GetQuotePosition() int32 {
	if x != nil {
		return x.QuotePosition
	}
	return 0
}

func (x *OverleafComment) GetQuoteText() string {
	if x != nil {
		return x.QuoteText
	}
	return ""
}

func (x *OverleafComment) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *OverleafComment) GetImportance() string {
	if x != nil {
		return x.Importance
	}
	return ""
}

func (x *OverleafComment) GetDocPath() string {
	if x != nil {
		return x.DocPath
	}
	return ""
}

func (x *OverleafComment) GetSection() string {
	if x != nil {
		return x.Section
	}
	return ""
}

type PaperScoreCommentResult struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Results       []*PaperScoreCommentEntry `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PaperScoreCommentResult) Reset() {
	*x = PaperScoreCommentResult{}
	mi := &file_project_v1_project_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PaperScoreCommentResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaperScoreCommentResult) ProtoMessage() {}

func (x *PaperScoreCommentResult) ProtoReflect() protoreflect.Message {
	mi := &file_project_v1_project_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaperScoreCommentResult.ProtoReflect.Descriptor instead.
func (*PaperScoreCommentResult) Descriptor() ([]byte, []int) {
	return file_project_v1_project_proto_rawDescGZIP(), []int{13}
}

func (x *PaperScoreCommentResult) GetResults() []*PaperScoreCommentEntry {
	if x != nil {
		return x.Results
	}
	return nil
}

type PaperScoreCommentEntry struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	Section string                 `protobuf:"bytes,1,opt,name=section,proto3" json:"section,omitempty"`
	// Note: Do not use anchor_text here, the key in backend is “anchorText”.
	AnchorText    string `protobuf:"bytes,2,opt,name=anchorText,proto3" json:"anchorText,omitempty"` // do not trust the linter
	Weakness      string `protobuf:"bytes,3,opt,name=weakness,proto3" json:"weakness,omitempty"`
	Importance    string `protobuf:"bytes,4,opt,name=importance,proto3" json:"importance,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PaperScoreCommentEntry) Reset() {
	*x = PaperScoreCommentEntry{}
	mi := &file_project_v1_project_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PaperScoreCommentEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaperScoreCommentEntry) ProtoMessage() {}

func (x *PaperScoreCommentEntry) ProtoReflect() protoreflect.Message {
	mi := &file_project_v1_project_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaperScoreCommentEntry.ProtoReflect.Descriptor instead.
func (*PaperScoreCommentEntry) Descriptor() ([]byte, []int) {
	return file_project_v1_project_proto_rawDescGZIP(), []int{14}
}

func (x *PaperScoreCommentEntry) GetSection() string {
	if x != nil {
		return x.Section
	}
	return ""
}

func (x *PaperScoreCommentEntry) GetAnchorText() string {
	if x != nil {
		return x.AnchorText
	}
	return ""
}

func (x *PaperScoreCommentEntry) GetWeakness() string {
	if x != nil {
		return x.Weakness
	}
	return ""
}

func (x *PaperScoreCommentEntry) GetImportance() string {
	if x != nil {
		return x.Importance
	}
	return ""
}

type PaperScoreResult struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	Score         float32                    `protobuf:"fixed32,1,opt,name=score,proto3" json:"score,omitempty"`
	Percentile    float32                    `protobuf:"fixed32,2,opt,name=percentile,proto3" json:"percentile,omitempty"`
	Details       map[string]int32           `protobuf:"bytes,3,rep,name=details,proto3" json:"details,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	Suggestions   map[string]*SuggestionList `protobuf:"bytes,4,rep,name=suggestions,proto3" json:"suggestions,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PaperScoreResult) Reset() {
	*x = PaperScoreResult{}
	mi := &file_project_v1_project_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PaperScoreResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaperScoreResult) ProtoMessage() {}

func (x *PaperScoreResult) ProtoReflect() protoreflect.Message {
	mi := &file_project_v1_project_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaperScoreResult.ProtoReflect.Descriptor instead.
func (*PaperScoreResult) Descriptor() ([]byte, []int) {
	return file_project_v1_project_proto_rawDescGZIP(), []int{15}
}

func (x *PaperScoreResult) GetScore() float32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *PaperScoreResult) GetPercentile() float32 {
	if x != nil {
		return x.Percentile
	}
	return 0
}

func (x *PaperScoreResult) GetDetails() map[string]int32 {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *PaperScoreResult) GetSuggestions() map[string]*SuggestionList {
	if x != nil {
		return x.Suggestions
	}
	return nil
}

type SuggestionList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Suggestions   []string               `protobuf:"bytes,1,rep,name=suggestions,proto3" json:"suggestions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SuggestionList) Reset() {
	*x = SuggestionList{}
	mi := &file_project_v1_project_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SuggestionList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestionList) ProtoMessage() {}

func (x *SuggestionList) ProtoReflect() protoreflect.Message {
	mi := &file_project_v1_project_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestionList.ProtoReflect.Descriptor instead.
func (*SuggestionList) Descriptor() ([]byte, []int) {
	return file_project_v1_project_proto_rawDescGZIP(), []int{16}
}

func (x *SuggestionList) GetSuggestions() []string {
	if x != nil {
		return x.Suggestions
	}
	return nil
}

// Instructions
type GetProjectInstructionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectId     string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetProjectInstructionsRequest) Reset() {
	*x = GetProjectInstructionsRequest{}
	mi := &file_project_v1_project_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProjectInstructionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectInstructionsRequest) ProtoMessage() {}

func (x *GetProjectInstructionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_project_v1_project_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectInstructionsRequest.ProtoReflect.Descriptor instead.
func (*GetProjectInstructionsRequest) Descriptor() ([]byte, []int) {
	return file_project_v1_project_proto_rawDescGZIP(), []int{17}
}

func (x *GetProjectInstructionsRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

type GetProjectInstructionsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectId     string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Instructions  string                 `protobuf:"bytes,2,opt,name=instructions,proto3" json:"instructions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetProjectInstructionsResponse) Reset() {
	*x = GetProjectInstructionsResponse{}
	mi := &file_project_v1_project_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProjectInstructionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectInstructionsResponse) ProtoMessage() {}

func (x *GetProjectInstructionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_project_v1_project_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectInstructionsResponse.ProtoReflect.Descriptor instead.
func (*GetProjectInstructionsResponse) Descriptor() ([]byte, []int) {
	return file_project_v1_project_proto_rawDescGZIP(), []int{18}
}

func (x *GetProjectInstructionsResponse) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *GetProjectInstructionsResponse) GetInstructions() string {
	if x != nil {
		return x.Instructions
	}
	return ""
}

type UpsertProjectInstructionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectId     string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Instructions  string                 `protobuf:"bytes,2,opt,name=instructions,proto3" json:"instructions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpsertProjectInstructionsRequest) Reset() {
	*x = UpsertProjectInstructionsRequest{}
	mi := &file_project_v1_project_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpsertProjectInstructionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertProjectInstructionsRequest) ProtoMessage() {}

func (x *UpsertProjectInstructionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_project_v1_project_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertProjectInstructionsRequest.ProtoReflect.Descriptor instead.
func (*UpsertProjectInstructionsRequest) Descriptor() ([]byte, []int) {
	return file_project_v1_project_proto_rawDescGZIP(), []int{19}
}

func (x *UpsertProjectInstructionsRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *UpsertProjectInstructionsRequest) GetInstructions() string {
	if x != nil {
		return x.Instructions
	}
	return ""
}

type UpsertProjectInstructionsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectId     string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Instructions  string                 `protobuf:"bytes,2,opt,name=instructions,proto3" json:"instructions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpsertProjectInstructionsResponse) Reset() {
	*x = UpsertProjectInstructionsResponse{}
	mi := &file_project_v1_project_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpsertProjectInstructionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertProjectInstructionsResponse) ProtoMessage() {}

func (x *UpsertProjectInstructionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_project_v1_project_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertProjectInstructionsResponse.ProtoReflect.Descriptor instead.
func (*UpsertProjectInstructionsResponse) Descriptor() ([]byte, []int) {
	return file_project_v1_project_proto_rawDescGZIP(), []int{20}
}

func (x *UpsertProjectInstructionsResponse) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *UpsertProjectInstructionsResponse) GetInstructions() string {
	if x != nil {
		return x.Instructions
	}
	return ""
}

var File_project_v1_project_proto protoreflect.FileDescriptor

const file_project_v1_project_proto_rawDesc = "" +
	"\n" +
	"\x18project/v1/project.proto\x12\n" +
	"project.v1\x1a\x1cgoogle/api/annotations.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xef\x01\n" +
	"\aProject\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x129\n" +
	"\n" +
	"created_at\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\x12\x1e\n" +
	"\vroot_doc_id\x18\x05 \x01(\tR\trootDocId\x12*\n" +
	"\x04docs\x18\x06 \x03(\v2\x16.project.v1.ProjectDocR\x04docs\"h\n" +
	"\n" +
	"ProjectDoc\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x18\n" +
	"\aversion\x18\x02 \x01(\x05R\aversion\x12\x1a\n" +
	"\bfilepath\x18\x03 \x01(\tR\bfilepath\x12\x14\n" +
	"\x05lines\x18\x04 \x03(\tR\x05lines\"\x95\x01\n" +
	"\x14UpsertProjectRequest\x12\x1d\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tR\tprojectId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1e\n" +
	"\vroot_doc_id\x18\x03 \x01(\tR\trootDocId\x12*\n" +
	"\x04docs\x18\x04 \x03(\v2\x16.project.v1.ProjectDocR\x04docs\"F\n" +
	"\x15UpsertProjectResponse\x12-\n" +
	"\aproject\x18\x01 \x01(\v2\x13.project.v1.ProjectR\aproject\"2\n" +
	"\x11GetProjectRequest\x12\x1d\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tR\tprojectId\"C\n" +
	"\x12GetProjectResponse\x12-\n" +
	"\aproject\x18\x01 \x01(\v2\x13.project.v1.ProjectR\aproject\"e\n" +
	"\x1bRunProjectPaperScoreRequest\x12\x1d\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tR\tprojectId\x12'\n" +
	"\x0fconversation_id\x18\x02 \x01(\tR\x0econversationId\"|\n" +
	"\x1cRunProjectPaperScoreResponse\x12\x1d\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tR\tprojectId\x12=\n" +
	"\vpaper_score\x18\x02 \x01(\v2\x1c.project.v1.PaperScoreResultR\n" +
	"paperScore\"l\n" +
	"\"RunProjectPaperScoreCommentRequest\x12\x1d\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tR\tprojectId\x12'\n" +
	"\x0fconversation_id\x18\x02 \x01(\tR\x0econversationId\"\x85\x01\n" +
	"#RunProjectPaperScoreCommentResponse\x12\x1d\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tR\tprojectId\x12?\n" +
	"\bcomments\x18\x02 \x03(\v2#.project.v1.PaperScoreCommentResultR\bcomments\"\xb6\x01\n" +
	" RunProjectOverleafCommentRequest\x12\x1d\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tR\tprojectId\x12\x18\n" +
	"\asection\x18\x02 \x01(\tR\asection\x12\x1f\n" +
	"\vanchor_text\x18\x03 \x01(\tR\n" +
	"anchorText\x12\x18\n" +
	"\acomment\x18\x04 \x01(\tR\acomment\x12\x1e\n" +
	"\n" +
	"importance\x18\x05 \x01(\tR\n" +
	"importance\"{\n" +
	"!RunProjectOverleafCommentResponse\x12\x1d\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tR\tprojectId\x127\n" +
	"\bcomments\x18\x02 \x03(\v2\x1b.project.v1.OverleafCommentR\bcomments\"\xd7\x02\n" +
	"\x0fOverleafComment\x12\x1d\n" +
	"\n" +
	"comment_id\x18\x01 \x01(\tR\tcommentId\x12\x1d\n" +
	"\n" +
	"project_id\x18\x02 \x01(\tR\tprojectId\x12\x15\n" +
	"\x06doc_id\x18\x03 \x01(\tR\x05docId\x12\x1f\n" +
	"\vdoc_version\x18\x04 \x01(\x05R\n" +
	"docVersion\x12\x19\n" +
	"\bdoc_sha1\x18\x05 \x01(\tR\adocSha1\x12%\n" +
	"\x0equote_position\x18\x06 \x01(\x05R\rquotePosition\x12\x1d\n" +
	"\n" +
	"quote_text\x18\a \x01(\tR\tquoteText\x12\x18\n" +
	"\acomment\x18\b \x01(\tR\acomment\x12\x1e\n" +
	"\n" +
	"importance\x18\t \x01(\tR\n" +
	"importance\x12\x19\n" +
	"\bdoc_path\x18\n" +
	" \x01(\tR\adocPath\x12\x18\n" +
	"\asection\x18\v \x01(\tR\asection\"W\n" +
	"\x17PaperScoreCommentResult\x12<\n" +
	"\aresults\x18\x01 \x03(\v2\".project.v1.PaperScoreCommentEntryR\aresults\"\x8e\x01\n" +
	"\x16PaperScoreCommentEntry\x12\x18\n" +
	"\asection\x18\x01 \x01(\tR\asection\x12\x1e\n" +
	"\n" +
	"anchorText\x18\x02 \x01(\tR\n" +
	"anchorText\x12\x1a\n" +
	"\bweakness\x18\x03 \x01(\tR\bweakness\x12\x1e\n" +
	"\n" +
	"importance\x18\x04 \x01(\tR\n" +
	"importance\"\xf6\x02\n" +
	"\x10PaperScoreResult\x12\x14\n" +
	"\x05score\x18\x01 \x01(\x02R\x05score\x12\x1e\n" +
	"\n" +
	"percentile\x18\x02 \x01(\x02R\n" +
	"percentile\x12C\n" +
	"\adetails\x18\x03 \x03(\v2).project.v1.PaperScoreResult.DetailsEntryR\adetails\x12O\n" +
	"\vsuggestions\x18\x04 \x03(\v2-.project.v1.PaperScoreResult.SuggestionsEntryR\vsuggestions\x1a:\n" +
	"\fDetailsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value:\x028\x01\x1aZ\n" +
	"\x10SuggestionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x120\n" +
	"\x05value\x18\x02 \x01(\v2\x1a.project.v1.SuggestionListR\x05value:\x028\x01\"2\n" +
	"\x0eSuggestionList\x12 \n" +
	"\vsuggestions\x18\x01 \x03(\tR\vsuggestions\">\n" +
	"\x1dGetProjectInstructionsRequest\x12\x1d\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tR\tprojectId\"c\n" +
	"\x1eGetProjectInstructionsResponse\x12\x1d\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tR\tprojectId\x12\"\n" +
	"\finstructions\x18\x02 \x01(\tR\finstructions\"e\n" +
	" UpsertProjectInstructionsRequest\x12\x1d\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tR\tprojectId\x12\"\n" +
	"\finstructions\x18\x02 \x01(\tR\finstructions\"f\n" +
	"!UpsertProjectInstructionsResponse\x12\x1d\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tR\tprojectId\x12\"\n" +
	"\finstructions\x18\x02 \x01(\tR\finstructions2\x90\t\n" +
	"\x0eProjectService\x12\x82\x01\n" +
	"\rUpsertProject\x12 .project.v1.UpsertProjectRequest\x1a!.project.v1.UpsertProjectResponse\",\x82\xd3\xe4\x93\x02&:\x01*\x1a!/_pd/api/v1/projects/{project_id}\x12v\n" +
	"\n" +
	"GetProject\x12\x1d.project.v1.GetProjectRequest\x1a\x1e.project.v1.GetProjectResponse\")\x82\xd3\xe4\x93\x02#\x12!/_pd/api/v1/projects/{project_id}\x12\xa3\x01\n" +
	"\x14RunProjectPaperScore\x12'.project.v1.RunProjectPaperScoreRequest\x1a(.project.v1.RunProjectPaperScoreResponse\"8\x82\xd3\xe4\x93\x022:\x01*\"-/_pd/api/v1/projects/{project_id}/paper-score\x12\xc0\x01\n" +
	"\x1bRunProjectPaperScoreComment\x12..project.v1.RunProjectPaperScoreCommentRequest\x1a/.project.v1.RunProjectPaperScoreCommentResponse\"@\x82\xd3\xe4\x93\x02::\x01*\"5/_pd/api/v1/projects/{project_id}/paper-score-comment\x12\xb7\x01\n" +
	"\x19RunProjectOverleafComment\x12,.project.v1.RunProjectOverleafCommentRequest\x1a-.project.v1.RunProjectOverleafCommentResponse\"=\x82\xd3\xe4\x93\x027:\x01*\"2/_pd/api/v1/projects/{project_id}/overleaf-comment\x12\xa7\x01\n" +
	"\x16GetProjectInstructions\x12).project.v1.GetProjectInstructionsRequest\x1a*.project.v1.GetProjectInstructionsResponse\"6\x82\xd3\xe4\x93\x020\x12./_pd/api/v1/projects/{project_id}/instructions\x12\xb3\x01\n" +
	"\x19UpsertProjectInstructions\x12,.project.v1.UpsertProjectInstructionsRequest\x1a-.project.v1.UpsertProjectInstructionsResponse\"9\x82\xd3\xe4\x93\x023:\x01*\"./_pd/api/v1/projects/{project_id}/instructionsB\x97\x01\n" +
	"\x0ecom.project.v1B\fProjectProtoP\x01Z.paperdebugger/pkg/gen/api/project/v1;projectv1\xa2\x02\x03PXX\xaa\x02\n" +
	"Project.V1\xca\x02\n" +
	"Project\\V1\xe2\x02\x16Project\\V1\\GPBMetadata\xea\x02\vProject::V1b\x06proto3"

var (
	file_project_v1_project_proto_rawDescOnce sync.Once
	file_project_v1_project_proto_rawDescData []byte
)

func file_project_v1_project_proto_rawDescGZIP() []byte {
	file_project_v1_project_proto_rawDescOnce.Do(func() {
		file_project_v1_project_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_project_v1_project_proto_rawDesc), len(file_project_v1_project_proto_rawDesc)))
	})
	return file_project_v1_project_proto_rawDescData
}

var file_project_v1_project_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_project_v1_project_proto_goTypes = []any{
	(*Project)(nil),                             // 0: project.v1.Project
	(*ProjectDoc)(nil),                          // 1: project.v1.ProjectDoc
	(*UpsertProjectRequest)(nil),                // 2: project.v1.UpsertProjectRequest
	(*UpsertProjectResponse)(nil),               // 3: project.v1.UpsertProjectResponse
	(*GetProjectRequest)(nil),                   // 4: project.v1.GetProjectRequest
	(*GetProjectResponse)(nil),                  // 5: project.v1.GetProjectResponse
	(*RunProjectPaperScoreRequest)(nil),         // 6: project.v1.RunProjectPaperScoreRequest
	(*RunProjectPaperScoreResponse)(nil),        // 7: project.v1.RunProjectPaperScoreResponse
	(*RunProjectPaperScoreCommentRequest)(nil),  // 8: project.v1.RunProjectPaperScoreCommentRequest
	(*RunProjectPaperScoreCommentResponse)(nil), // 9: project.v1.RunProjectPaperScoreCommentResponse
	(*RunProjectOverleafCommentRequest)(nil),    // 10: project.v1.RunProjectOverleafCommentRequest
	(*RunProjectOverleafCommentResponse)(nil),   // 11: project.v1.RunProjectOverleafCommentResponse
	(*OverleafComment)(nil),                     // 12: project.v1.OverleafComment
	(*PaperScoreCommentResult)(nil),             // 13: project.v1.PaperScoreCommentResult
	(*PaperScoreCommentEntry)(nil),              // 14: project.v1.PaperScoreCommentEntry
	(*PaperScoreResult)(nil),                    // 15: project.v1.PaperScoreResult
	(*SuggestionList)(nil),                      // 16: project.v1.SuggestionList
	(*GetProjectInstructionsRequest)(nil),       // 17: project.v1.GetProjectInstructionsRequest
	(*GetProjectInstructionsResponse)(nil),      // 18: project.v1.GetProjectInstructionsResponse
	(*UpsertProjectInstructionsRequest)(nil),    // 19: project.v1.UpsertProjectInstructionsRequest
	(*UpsertProjectInstructionsResponse)(nil),   // 20: project.v1.UpsertProjectInstructionsResponse
	nil,                           // 21: project.v1.PaperScoreResult.DetailsEntry
	nil,                           // 22: project.v1.PaperScoreResult.SuggestionsEntry
	(*timestamppb.Timestamp)(nil), // 23: google.protobuf.Timestamp
}
var file_project_v1_project_proto_depIdxs = []int32{
	23, // 0: project.v1.Project.created_at:type_name -> google.protobuf.Timestamp
	23, // 1: project.v1.Project.updated_at:type_name -> google.protobuf.Timestamp
	1,  // 2: project.v1.Project.docs:type_name -> project.v1.ProjectDoc
	1,  // 3: project.v1.UpsertProjectRequest.docs:type_name -> project.v1.ProjectDoc
	0,  // 4: project.v1.UpsertProjectResponse.project:type_name -> project.v1.Project
	0,  // 5: project.v1.GetProjectResponse.project:type_name -> project.v1.Project
	15, // 6: project.v1.RunProjectPaperScoreResponse.paper_score:type_name -> project.v1.PaperScoreResult
	13, // 7: project.v1.RunProjectPaperScoreCommentResponse.comments:type_name -> project.v1.PaperScoreCommentResult
	12, // 8: project.v1.RunProjectOverleafCommentResponse.comments:type_name -> project.v1.OverleafComment
	14, // 9: project.v1.PaperScoreCommentResult.results:type_name -> project.v1.PaperScoreCommentEntry
	21, // 10: project.v1.PaperScoreResult.details:type_name -> project.v1.PaperScoreResult.DetailsEntry
	22, // 11: project.v1.PaperScoreResult.suggestions:type_name -> project.v1.PaperScoreResult.SuggestionsEntry
	16, // 12: project.v1.PaperScoreResult.SuggestionsEntry.value:type_name -> project.v1.SuggestionList
	2,  // 13: project.v1.ProjectService.UpsertProject:input_type -> project.v1.UpsertProjectRequest
	4,  // 14: project.v1.ProjectService.GetProject:input_type -> project.v1.GetProjectRequest
	6,  // 15: project.v1.ProjectService.RunProjectPaperScore:input_type -> project.v1.RunProjectPaperScoreRequest
	8,  // 16: project.v1.ProjectService.RunProjectPaperScoreComment:input_type -> project.v1.RunProjectPaperScoreCommentRequest
	10, // 17: project.v1.ProjectService.RunProjectOverleafComment:input_type -> project.v1.RunProjectOverleafCommentRequest
	17, // 18: project.v1.ProjectService.GetProjectInstructions:input_type -> project.v1.GetProjectInstructionsRequest
	19, // 19: project.v1.ProjectService.UpsertProjectInstructions:input_type -> project.v1.UpsertProjectInstructionsRequest
	3,  // 20: project.v1.ProjectService.UpsertProject:output_type -> project.v1.UpsertProjectResponse
	5,  // 21: project.v1.ProjectService.GetProject:output_type -> project.v1.GetProjectResponse
	7,  // 22: project.v1.ProjectService.RunProjectPaperScore:output_type -> project.v1.RunProjectPaperScoreResponse
	9,  // 23: project.v1.ProjectService.RunProjectPaperScoreComment:output_type -> project.v1.RunProjectPaperScoreCommentResponse
	11, // 24: project.v1.ProjectService.RunProjectOverleafComment:output_type -> project.v1.RunProjectOverleafCommentResponse
	18, // 25: project.v1.ProjectService.GetProjectInstructions:output_type -> project.v1.GetProjectInstructionsResponse
	20, // 26: project.v1.ProjectService.UpsertProjectInstructions:output_type -> project.v1.UpsertProjectInstructionsResponse
	20, // [20:27] is the sub-list for method output_type
	13, // [13:20] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_project_v1_project_proto_init() }
func file_project_v1_project_proto_init() {
	if File_project_v1_project_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_project_v1_project_proto_rawDesc), len(file_project_v1_project_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_project_v1_project_proto_goTypes,
		DependencyIndexes: file_project_v1_project_proto_depIdxs,
		MessageInfos:      file_project_v1_project_proto_msgTypes,
	}.Build()
	File_project_v1_project_proto = out.File
	file_project_v1_project_proto_goTypes = nil
	file_project_v1_project_proto_depIdxs = nil
}
